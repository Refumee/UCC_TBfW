### base palette vs new palette: color changer with loyal unit option

#define OBJECT_OF_COLORCHANGER BASECOLOR NEWCOLOR ID
	[if]
		[have_unit]
			x,y=$unit_location[0].x,$unit_location[0].y
			[filter_wml]
				[modifications]
					[object]
						modification_scale_color_shift=yes
					[/object]
				[/modifications]
			[/filter_wml]
		[/have_unit]
		
		[then]
			[remove_object]
				x,y=$unit_location[0].x,$unit_location[0].y
				object_id=$unit_location[0].underlying_id
			[/remove_object]
		[/then]
		
		[else]
		[/else]
	[/if]
	
	[object]
		modification_scale_color_shift=yes
		modification_UCC_shift=yes
		#modification_id={ID}
		id=$unit_location[0].underlying_id
		duration=forever
		take_only_once=no
		[filter]
			x,y=$unit_location[0].x,$unit_location[0].y
		[/filter]
		
		[effect]
			apply_to=image_mod
			replace=PAL({BASECOLOR} > {NEWCOLOR})
		[/effect]
	[/object]
#enddef

### Advancement (if the advancements using a different set of pallets)

#define MODIFICATION_COLORCHANGER_ADVANCEMENT_SIDE POST_ADVANCEMENT BASECOLOR NEWCOLOR
    [elseif]

        [have_unit]
            {POST_ADVANCEMENT}
			x,y=$x1,$y1
			[not]
				[filter_wml]
					[modifications]
						[object]
							modification_UCC_shift=yes
						[/object]
					[/modifications]
				[/filter_wml]
			[/not]
        [/have_unit]
		[then]
			[for]
				array=color_side
				[do]
					[object]
						modification_scale_color_shift=yes
						#modification_id=SHIFT
						id=$unit.underlying_id
						duration=forever
						take_only_once=no
						[filter]
							find_in=unit
							x,y=$x1,$y1
							side=$color_side[$i].side
						[/filter]
						
						[effect]
							apply_to=image_mod
							replace=PAL({BASECOLOR} > {NEWCOLOR})
						[/effect]
					[/object]
				[/do]
			[/for]	
		[/then]
    [/elseif]
#enddef

#define MODIFICATION_COLORCHANGER_ADVANCEMENT_DYNAMIC POST_ADVANCEMENT BASECOLOR NEWCOLOR
    [elseif]

        [have_unit]
            {POST_ADVANCEMENT}
			x,y=$x1,$y1
        [/have_unit]
		[then]	
			[remove_object]
				object_id=$unit.underlying_id
			[/remove_object]
						
			[object]
				modification_scale_color_shift=yes
				modification_id=$unit.modifications.object.modification_id
				modification_UCC_shift=yes
				id=$unit.underlying_id
				duration=forever
				take_only_once=no
				[filter]
					find_in=unit
					x,y=$x1,$y1
				[/filter]
				
				[effect]
					apply_to=image_mod
					replace=PAL({BASECOLOR} > {NEWCOLOR})
				[/effect]
			[/object]
		[/then]
    [/elseif]
#enddef

#gives a unit a readable variable
#define OBJECT_OF_COLORCHANGER_VARIABLE VAR OP_NAME VALUE
	[modify_unit]
		[filter]
			x,y=$unit_location[0].x,$unit_location[0].y
		[/filter]
		{VARIABLE_OP {VAR} {OP_NAME} {VALUE}}
	[/modify_unit]
#enddef

#################################################################################################
################################## Picking a color side event ###################################
#################################################################################################

### code for imitate color change of all units of a whole side ###
#define COLORCHANGER_CHANGER_CODE_SIDE FILTER_WML BASECOLOR NEWCOLOR ID
		[remove_object]
			object_id={ID}
		[/remove_object]
		[modify_unit]
			[filter]
				{FILTER_WML}
				side=$unit_location[0].side
				[not]
					[filter_wml]
						[modifications]
							[object]
								modification_UCC_shift=yes
							[/object]
						[/modifications]
					[/filter_wml]
				[/not]
			[/filter]
			{COLORCHANGER_CHANGER_CODE_SIDE_HELPER {BASECOLOR} {NEWCOLOR} {ID}}
		[/modify_unit]
#enddef

#define COLORCHANGER_CHANGER_CODE_SIDE_NOID FILTER_WML BASECOLOR NEWCOLOR ID
		[modify_unit]
			[filter]
				{FILTER_WML}
				side=$color_side[$unit_location[0].side].side
				[not]
					[filter_wml]
						[modifications]
							[object]
								modification_UCC_shift=yes
							[/object]
						[/modifications]
					[/filter_wml]
				[/not]
			[/filter]
			{COLORCHANGER_CHANGER_CODE_SIDE_HELPER {BASECOLOR} {NEWCOLOR} {ID}}
		[/modify_unit]
#enddef

#define COLORCHANGER_CHANGER_CODE_SIDE_HELPER BASECOLOR NEWCOLOR ID
		[object]
			modification_scale_color_shift=yes
			#modification_id=SHIFT
			id={ID}
			duration=forever
			
			[filter]
				find_in=unit
				x,y=$x1,$y1
				side=$color_side[$unit_location[0].side].side
			[/filter]
			
			[effect]
				apply_to=image_mod
				replace=PAL({BASECOLOR} > {NEWCOLOR})
			[/effect]
		[/object]
#enddef

### code for show if ###

#define COLORCHANGER_CHANGER_SHOW_IF EQUALNOTEQUAL PICKER
		[show_if]
			{VARIABLE_CONDITIONAL single_unit_UCC {EQUALNOTEQUAL} yes}
			{VARIABLE_CONDITIONAL Picker not_equals {PICKER}}
		[/show_if]
#enddef

### code for side recruitment ###
### it works through a list and checks which side got which color or if it is randomized ###
#define COLORCHANGER_RECRUIT_SIDE_CHANGER WML_FILTER BASECOLOR NEWCOLOR ID
    [elseif]

        [have_unit]
            {WML_FILTER}
			x,y=$x1,$y1
            [not]
                [filter_wml]
                    [modifications]
                        [object]
                            modification_scale_color_shift=yes
                        [/object]
                    [/modifications]
                [/filter_wml]
            [/not]
        [/have_unit]
		{VARIABLE_CONDITIONAL colorchanger_sides_active equals yes}
		[then]
			[for]
				array=color_side
				[do]
					{OBJECT_OF_COLORCHANGER_SIDE $color_side[$i].side {BASECOLOR} {NEWCOLOR} {ID}}
				[/do]
			[/for]
		[/then]
	[/elseif]
#enddef

#define OBJECT_OF_COLORCHANGER_SIDE SIDE BASECOLOR NEWCOLOR ID
	[object]
		modification_scale_color_shift=yes
		#modification_id=SHIFT
		id={ID}
		duration=forever
		take_only_once=no
		[filter]
			find_in=unit
			x,y=$x1,$y1
			side={SIDE}
		[/filter]
		
		[effect]
			apply_to=image_mod
			replace=PAL({BASECOLOR} > {NEWCOLOR})
		[/effect]
	[/object]
#enddef

#define COLORCHANGE_CLICK_MENU_CASE_ELIF FILTER_RACE ID_EVENT TYPE PICKER
				[elseif]
					[have_unit]
						{FILTER_RACE}
						x,y=$unit_location[0].x,$unit_location[0].y
					[/have_unit]
					[then]
						{VARIABLE UNITTYPE {TYPE}}
						{VARIABLE Picker {PICKER}}
						[fire_event]
							id={ID_EVENT}
						[/fire_event]
					[/then]
				[/elseif]
#enddef

#define COLORCHANGE_CLICK_MENU_ITEM_VARIABLE ID_EVENT YESNO TYPE PICKER
					[command]
						[store_unit]
							variable=unit_location
							[filter]
								x,y=$x1,$y1
							[/filter]
						[/store_unit]
						[store_side]
							variable=unit_side
							[filter]
								x,y=$x1,$y1
							[/filter]
						[/store_side]
						{VARIABLE unit_side_minus $unit_location[0].side}
						{VARIABLE_OP unit_side_minus sub 1}
						{VARIABLE single_unit_UCC {YESNO}}
						{VARIABLE UNITTYPE {TYPE}}
						{VARIABLE Picker {PICKER}}
						[fire_event]
							id={ID_EVENT}
						[/fire_event]
						{CLEAR_VARIABLE unit_location}
						{CLEAR_VARIABLE unit_side}
						{CLEAR_VARIABLE unit_side_minus}
						{CLEAR_VARIABLE UNITTYPE}
						{CLEAR_VARIABLE Picker}
					[/command]
#enddef

### Set menu item macro
#define COLORCHANGE_CLICK_MENU_ITEM ID ID2 FILTER_WML ID_EVENT TYPE PICKER
				[set_menu_item]
					id={ID}
					description=_"Color changer: single unit"
					[show_if]
						{VARIABLE_CONDITIONAL color_changer_ingame equals yes}
					[/show_if]
					[filter_location]
						[filter]
							{FILTER_WML}
							x,y=$x1,$y1
						[/filter]
					[/filter_location]
					{COLORCHANGE_CLICK_MENU_ITEM_VARIABLE {ID_EVENT} yes {TYPE} {PICKER} }
				[/set_menu_item]
				[set_menu_item]
					id={ID2}
					description=_"Color changer: whole faction"
					[show_if]
						{VARIABLE_CONDITIONAL color_changer_ingame_side equals yes}
					[/show_if]
					[filter_location]
						[filter]
							{FILTER_WML}
							x,y=$x1,$y1
						[/filter]
					[/filter_location]
					{COLORCHANGE_CLICK_MENU_ITEM_VARIABLE {ID_EVENT} no {TYPE} {PICKER}}
				[/set_menu_item]
#enddef				
#define COLORCHANGE_CLICK_MENU_ITEM_SIDE ID ID2 FILTER_WML ID_EVENT TYPE PICKER
				[set_menu_item]
					id={ID}
					description=_"Color changer: single unit"
					[show_if]
						{VARIABLE_CONDITIONAL color_changer_ingame equals yes}
					[/show_if]
					[filter_location]
						[filter]
							side=$side_number
							{FILTER_WML}
							x,y=$x1,$y1
						[/filter]
					[/filter_location]
					{COLORCHANGE_CLICK_MENU_ITEM_VARIABLE {ID_EVENT} yes {TYPE} {PICKER} }
				[/set_menu_item]
				[set_menu_item]
					id={ID2}
					description=_"Color changer: whole faction"
					[show_if]
						{VARIABLE_CONDITIONAL color_changer_ingame_side equals yes}
					[/show_if]
					[filter_location]
						[filter]
							side=$side_number
							{FILTER_WML}
							x,y=$x1,$y1
						[/filter]
					[/filter_location]
					{COLORCHANGE_CLICK_MENU_ITEM_VARIABLE {ID_EVENT} no {TYPE} {PICKER} }
				[/set_menu_item]
#enddef

#define SHOW_IF_SINGLEUNIT_UNITTYPE EQUALS UNITTYPE
	{VARIABLE_CONDITIONAL single_unit_UCC {EQUALS} yes}
	{VARIABLE_CONDITIONAL UNITTYPE equals {UNITTYPE} }
#enddef